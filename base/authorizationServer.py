from flask import Flask, request, redirect, jsonify
from typing import List
import urllib
import random
import string

app = Flask(__name__)

state = None
access_token = None
scope = None

auth_server = {
    'authorization_endpoint': 'http://localhost:10001/authorize',
    'token_endpoint': 'http://localhost:10001/token'
}

clients = [
    {
        'client_id': 'oauth-client-1',
        'client_secret': 'oauth-client-secret-1',
        'redirect_uris': ['http://localhost:10000/callback'],
        'scope': 'hoge+huga'
    }
]

code = {}
requests = {}

def get_client(client_id: str):
    return next(filter(lambda x: x['client_id']==client_id, clients), None)

def build_url(base: str, options: dict):
    pr = urllib.parse.urlparse(base)
    return urllib.parse.urlunparse(pr._replace(query=urllib.parse.urlencode(options, doseq=True)))

def generate_randomstring(size: int):
    return ''.join(random.SystemRandom().choice(string.ascii_uppercase + string.digits) for _ in range(size))

@app.route("/", methods=["GET"])
def index():
    return "ok"

@app.route("/authorize", methods=["GET"])
def authorize():
    client = get_client(request.args.get('client_id'))
    if client is None:
        print('Unknown client %s', request.args.get('client_id'))
        return "Error: Unkown client"
    if request.args.get('redirect_uri') not in client['redirect_uris']:
        print('Mismatched redirect URI, expected %s but got %s', client['redirect_uris'], request.args.get('redirect_uri'))
        return "Error: Invalid redirect URI"
    rscope: List[str] = request.args.get('scope').split('+') if request.args.get('scope') is not None else []
    cscope: List[str] = client['scope'].split('+') if client['scope'] is not None else []
    rscope.sort()
    cscope.sort()
    if rscope != cscope: # check scope equivalence
        url_parsed: str = urllib.parse.urlparse(request.args.get('redirect_uri'))
        d = urllib.parse.parse_qs(url_parsed.query)
        d['error'] = 'invalid_scope'
        return redirect(build_url(request.args.get('redirect_uri'), d))
    reqid: str = generate_randomstring(8)
    requests[reqid] = request.args
    return jsonify({'client': client, 'reqid': reqid, 'scope': rscope})
    

@app.route("/approve", methods=["POST"])
def approve():
    return "ok"
    

@app.route("/token", methods=["POST"])
def token():
    return "ok"

if __name__ == '__main__':
    app.run(host="0.0.0.0", port=10001)